{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","sortReverse","prevState","reset","this","goods","visibleGoods","sort","a","b","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAe,CACbC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZJ,SAAUJ,EAASS,SACnBH,YAAY,KATlB,EAaEI,aAAe,WACb,EAAKF,SAAS,CACZJ,SAAUJ,EAASW,OACnBL,YAAY,KAhBlB,EAoBEM,YAAc,WACZ,EAAKJ,UAAS,SAACK,GAAD,mBAAC,eACVA,GADS,IAEZP,YAAaO,EAAUP,iBAvB7B,EA2BEQ,MAAQ,WACN,EAAKN,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KA9BlB,4CAkCE,WACE,MAAiCS,KAAKZ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZU,EAlEH,SACLA,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEzB,OAAQZ,GACN,KAAKJ,EAASS,SACZQ,EAAaC,OACb,MAEF,KAAKlB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIf,GACFW,EAAaK,UAGRL,EA4CSM,CAAkBtB,EAAiBc,KAAKZ,OAEtD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaJ,EAASS,SAAW,GAAK,YACnEiB,QAASX,KAAKR,mBAHhB,iCAQA,wBACEkB,KAAK,SACLC,QAASX,KAAKL,aACdc,UAAS,4BAAuBpB,IAAaJ,EAASW,OAAS,GAAK,YAHtE,4BAQA,wBACEc,KAAK,SACLC,QAASX,KAAKH,YACdY,UAAS,4BAAuBlB,EAAa,GAAK,YAHpD,qBAQA,wBACEmB,KAAK,SACLC,QAASX,KAAKD,MACdU,UAAS,2BAAsBpB,IAAaJ,EAASK,KAAO,GAAK,YAHnE,sBASF,6BACGW,EAAMW,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eA5ErB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1951214d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n      isReversed: false,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n      isReversed: false,\n    });\n  };\n\n  sortReverse = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortReverse}\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reset}\n            className={`button is-danger ${sortType === SortType.NONE ? '' : 'is-light'}`}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          {goods.map((good) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}